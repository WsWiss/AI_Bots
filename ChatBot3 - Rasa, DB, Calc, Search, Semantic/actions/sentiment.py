from typing import Any, Text, Dict, List
from rasa_sdk import Action, Tracker
from rasa_sdk.executor import CollectingDispatcher
from rasa_sdk.events import SlotSet
from textblob import TextBlob
from googletrans import Translator

translator = Translator()

class ActionAnalyzeSentiment(Action):
    """–ê–Ω–∞–ª–∏–∑ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π"""

    def name(self) -> Text:
        return "action_analyze_sentiment"

    def run(self, dispatcher: CollectingDispatcher,
            tracker: Tracker,
            domain: Dict[Text, Any]) -> List[Dict[Text, Any]]:

        text = tracker.latest_message.get('text')

        if not text or len(text.strip()) < 3:
            dispatcher.utter_message(text="–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª –≤–∞—Å. –ú–æ–∂–µ—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å?")
            return []

        try:
            # –ü–µ—Ä–µ–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
            translated = translator.translate(text, dest='en').text
            analysis = TextBlob(translated)

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–æ–Ω –∏ —Å—É–±—ä–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            polarity = analysis.sentiment.polarity  # -1 to 1 (negative to positive)
            subjectivity = analysis.sentiment.subjectivity  # 0 to 1 (objective to subjective)

            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
            if polarity > 0.3:
                if subjectivity > 0.6:
                    msg = "–í—ã –≤—ã–≥–ª—è–¥–∏—Ç–µ –æ—á–µ–Ω—å —Å—á–∞—Å—Ç–ª–∏–≤—ã–º! üòä –ß—Ç–æ –≤–∞—Å —Ç–∞–∫ —Ä–∞–¥—É–µ—Ç?"
                else:
                    msg = "–ß—É–≤—Å—Ç–≤—É–µ—Ç—Å—è –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π –Ω–∞—Å—Ç—Ä–æ–π! üëç"
            elif polarity < -0.3:
                if subjectivity > 0.6:
                    msg = "–ö–∞–∂–µ—Ç—Å—è, –≤—ã —Ä–∞—Å—Å—Ç—Ä–æ–µ–Ω—ã. –•–æ—Ç–∏—Ç–µ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –æ–± —ç—Ç–æ–º? üíô"
                else:
                    msg = "–ß—É–≤—Å—Ç–≤—É–µ—Ç—Å—è –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π —Ç–æ–Ω. –ú–æ–≥—É —è —á–µ–º-—Ç–æ –ø–æ–º–æ—á—å? ü§ó"
            else:
                if subjectivity > 0.6:
                    msg = "–í—ã –≤—ã–≥–ª—è–¥–∏—Ç–µ —Å–ø–æ–∫–æ–π–Ω—ã–º. –ö–∞–∫ –≤–∞—à–∏ –¥–µ–ª–∞? üòå"
                else:
                    msg = "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ö–∞–∫ —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?"

            # –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∞–ª–∏–∑ —ç–º–æ—Ü–∏–π
            dispatcher.utter_message(text=msg)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ª–æ—Ç —Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
            mood = "positive" if polarity > 0.3 else ("negative" if polarity < -0.3 else "neutral")
            return [SlotSet("user_mood", mood)]

        except Exception as e:
            print(f"Sentiment analysis error: {str(e)}")
            dispatcher.utter_message(text="–Ø –≤–∞—Å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Å–ª—É—à–∞—é!")
            return []